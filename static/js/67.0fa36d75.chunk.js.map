{"version":3,"file":"static/js/67.0fa36d75.chunk.js","mappings":"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","sources":["components/ErrorCard/ErrorCard.styled.js","components/ErrorCard/ErrorCard.jsx","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","components/Paginate/Paginate.styled.js","components/Paginate/Paginate.jsx","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","pages/MoviesPage/MoviesPage.jsx","services/fetchAPI.js","utils/constants.js","utils/status.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: grid;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n\n  & p {\n    font-size: 24px;\n    color: #0649a1;\n    font-weight: 700;\n  }\n`\n","import PropTypes from 'prop-types';\nimport { Container } from './ErrorCard.styled';\n\nconst ErrorCard = ({ message }) => {\n  return (\n    <Container>\n      <p>{message}</p>\n    </Container>\n  );\n};\n\nErrorCard.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default ErrorCard;\n","import styled from 'styled-components';\nimport { breakpoints, devices } from 'utils/constants';\n\n/*\n * Стиль компонента ContainerGallery Movie\n */\n\nexport const ContainerGallery = styled.ul`\n  display: grid;\n  max-width: ${breakpoints.xl};\n  grid-template-columns: repeat(4, minmax(250px, 1fr));\n  grid-gap: 20px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n\n  @media only screen and ${devices.md} and ${devices.mlg} {\n    max-width: ${breakpoints.lg};\n    grid-template-columns: repeat(3, minmax(280px, 1fr));\n  }\n\n  @media only screen and ${devices.sm} and ${devices.mmd} {\n    max-width: ${breakpoints.md};\n    grid-template-columns: repeat(2, minmax(280px, 1fr));\n  }\n\n  @media only screen and ${devices.xs} and ${devices.msm} {\n    max-width: ${breakpoints.sm};\n    grid-template-columns: repeat(1, minmax(240px, 1fr));\n  }\n`;\n\n/*\n * Стиль компонента ContainerMovieItem\n */\n\nexport const ContainerMovie = styled.li`\n  display: grid;\n  grid-template-rows: 1fr 70px;\n  padding: 10px;\n  border-radius: 3px;\n  cursor: pointer;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n\n   & a {\n      display: block;\n      text-align: center;\n      text-transform: uppercase;\n      text-decoration: none;\n\n       & h3 {\n          color: #0649a1;\n          font-size: 18px;\n        }\n    }\n`;\n\nexport const ImageMovieWeb = styled.img`\n  width: 100%;\n  height: 100%;\n  border-radius: 3px;\n  border: 2px solid #767272;\n  object-fit: cover;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    &:hover {\n      transform: scale(1.03);\n    }\n\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport { BASE_POSTER_URL, PLACEHOLDER } from '../../utils/constants';\nimport PropTypes from 'prop-types';\nimport {\n  ContainerGallery,\n  ContainerMovie,\n  ImageMovieWeb,\n} from './MoviesList.styled';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      <ContainerGallery>\n        {movies?.map(movie => (\n          <ContainerMovie key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              <ImageMovieWeb\n                src={`${\n                  movie.poster_path\n                    ? BASE_POSTER_URL + movie.poster_path\n                    : PLACEHOLDER + '?text=' + movie.original_title\n                }`}\n                alt=\"poster movie\"\n              />\n              {movie.title && <h3>{movie.title}</h3>}\n              {movie.name && <h3>{movie.name}</h3>}\n            </Link>\n          </ContainerMovie>\n        ))}\n      </ContainerGallery>\n    </>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      poster_path: PropTypes.string,\n      original_title: PropTypes.string,\n      title: PropTypes.string,\n      name: PropTypes.string,\n    })\n  ).isRequired,\n};\n\nexport default MoviesList;\n","import ReactPaginate from 'react-paginate';\nimport styled from 'styled-components';\n\nexport const StyledReactPaginate = styled(ReactPaginate)`\n  display: grid;\n  grid-auto-flow: column;\n  justify-content: center;\n  align-content: center;\n  margin: 0;\n  padding: 12px;\n  border-radius: 5px;\n  border: 2px solid #d8dae5;\n  /* background-color: #d8dae5; */\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n  gap: 10px;\n  width: 100%;\n  color: #3984d8;\n  /* font-size: larger; */\n  list-style: none;\n    .page-item {\n      border: 2px solid #3984d8;\n      border-radius: 50%;\n      &.${props => props.activeClassName} {\n          background-color: #3984d8;\n          color: #fff;\n        }\n      }\n      .page-link {\n        display: grid;\n        justify-content: center;\n        align-content: center;\n        cursor: pointer;\n        width: 55px;\n        height: 55px;\n        font-size: 20px;\n        font-weight: 600;\n      }\n`\n","import { StyledReactPaginate } from './Paginate.styled';\nimport PropTypes from 'prop-types';\n\nconst Paginate = ({ handlePageClick, pageCount, activePage }) => {\n  return (\n    <>\n      <StyledReactPaginate\n        breakLabel=\"...\"\n        nextLabel=\">\"\n        pageClassName=\"page-item\"\n        pageLinkClassName=\"page-link\"\n        previousClassName=\"page-item\"\n        previousLinkClassName=\"page-link\"\n        breakClassName=\"page-item\"\n        breakLinkClassName=\"page-link\"\n        nextClassName=\"page-item\"\n        nextLinkClassName=\"page-link\"\n        onPageChange={handlePageClick}\n        pageRangeDisplayed={3}\n        marginPagesDisplayed={2}\n        pageCount={pageCount}\n        previousLabel=\"<\"\n        activeClassName=\"active\"\n        renderOnZeroPageCount={null}\n        forcePage={activePage}\n      />\n    </>\n  );\n};\n\nPaginate.propTypes = {\n  handlePageClick: PropTypes.func.isRequired,\n  pageCount: PropTypes.number.isRequired,\n};\n\nexport default Paginate;\n","import styled from 'styled-components';\n\n/*\n * Стиль компонента FormSearch-form\n */\n\nexport const FormSearch = styled.form`\n  display: grid;\n  grid-template-columns: 1fr 40px;\n  align-items: center;\n  justify-self: center;\n  height: 40px;\n  width: 500px;\n  background-color: #fff;\n  border: 1px solid #9e9a9a;\n  border-radius: 50px;\n  overflow: hidden;\n`;\n\n/*\n * Стиль компонента FormSearch-input\n */\n\nexport const Input = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-style: italic;\n  font-size: 20px;\n  outline: none;\n  border: none;\n  padding-left: 20px;\n  padding-right: 4px;\n\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\n/*\n * Стиль компонента FormSearch-button\n */\n\nexport const ButtonSearch = styled.button`\n  display: grid;\n  justify-content: center;\n  align-content: center;\n  width: 40px;\n  height: 40px;\n  border: none;\n  border-radius: 50%;\n  color: #3984d8;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  &:hover {\n    opacity: 1;\n    background-color: #78b1ef;\n    color: #fff;\n  }\n  svg {\n    width: 22px;\n    height: 22px;\n  }\n`;\n\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { BsSearch } from 'react-icons/bs';\nimport { FormSearch, Input, ButtonSearch } from './SearchForm.styled';\n\nconst SearchForm = ({ setSearchParams }) => {\n  const [query, setQuery] = useState('');\n\n  const handleChangeInput = e => {\n    const value = e.target.value.toLowerCase().trim();\n\n    setQuery(value);\n  };\n\n  const handleSubmitInput = e => {\n    e.preventDefault();\n    if (query === '') {\n      setSearchParams({});\n    }\n    setSearchParams({ query });\n\n    setQuery('');\n  };\n  return (\n    <FormSearch onSubmit={handleSubmitInput}>\n      <Input\n        name=\"query\"\n        value={query}\n        onChange={handleChangeInput}\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus={true}\n        placeholder=\"Search movies\"\n      />\n      <ButtonSearch type=\"submit\" disabled={!query}>\n        <BsSearch />\n      </ButtonSearch>\n    </FormSearch>\n  );\n};\n\nSearchForm.propTypes = {\n  setSearchParams: PropTypes.func.isRequired,\n};\n\nexport default SearchForm;\n","import { useState, useEffect } from 'react';\nimport { fetchSearchMovies } from '../../services/fetchAPI';\nimport { useSearchParams } from 'react-router-dom';\nimport SearchForm from '../../components/SearchForm/SearchForm';\nimport MoviesList from '../../components/MoviesList/MoviesList';\nimport { STATUS } from '../../utils/status';\nimport { Loader } from '../../components/Loader/Loader';\nimport ErrorCard from 'components/ErrorCard/ErrorCard';\nimport Paginate from 'components/Paginate/Paginate';\n\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState([]);\n  const [status, setStatus] = useState(STATUS.IDLE);\n  const [error, setError] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [pageCount, setPageCount] = useState(null);\n  const currentQuery = searchParams.get('query') ?? '';\n  const pageNumber = searchParams.get('page') ?? 1;\n  const activePage = parseInt(pageNumber - 1);\n\n  useEffect(() => {\n    if (currentQuery === '') return;\n    async function getSearchMovies(currentQuery, pageNumber) {\n      setStatus(STATUS.PENDING);\n      try {\n        const { results, total_pages } = await fetchSearchMovies(\n          currentQuery,\n          pageNumber\n        );\n        if (results.length === 0) {\n          setPageCount(null);\n          setError(\n            `Sorry, there are no movies matching your search query \"${currentQuery}\". Please try again.`\n          );\n          setStatus(STATUS.REJECTED);\n          return;\n        }\n        setStatus(STATUS.RESOLVED);\n        setMovies(results);\n        if (total_pages > 500) {\n          setPageCount(500);\n        } else {\n          setPageCount(total_pages);\n        }\n      } catch (error) {\n        setError(error.message);\n        setStatus(STATUS.REJECTED);\n      }\n    }\n    getSearchMovies(currentQuery, pageNumber);\n  }, [currentQuery, pageNumber]);\n\n  const handlePageClick = e => {\n    if (currentQuery === '') {\n      setSearchParams({});\n    }\n    const currentPage = e.selected + 1;\n\n    setSearchParams({\n      query: `${currentQuery}`,\n      page: `${currentPage}`,\n    });\n  };\n\n  return (\n    <>\n      <SearchForm setSearchParams={setSearchParams} />\n      {status === STATUS.PENDING && <Loader />}\n      {status === STATUS.RESOLVED && movies.length > 0 ? (\n        <MoviesList movies={movies} />\n      ) : (\n        status === STATUS.REJECTED && <ErrorCard message={error} />\n      )}\n      {pageCount > 1 && (\n        <Paginate\n          handlePageClick={handlePageClick}\n          pageCount={pageCount}\n          activePage={activePage}\n        />\n      )}\n    </>\n  );\n};\n\nexport default MoviesPage;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY_API = process.env.REACT_APP_SECRET_KEY_TMDB\n\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2ZjIzNTVjNGY5Yjc4M2VlZDFiMTIyMzQzMDRmNmNjMSIsInN1YiI6IjVlNDZiNjVkMmRhODQ2MDAxMzA0NjkyZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.hQwHZNlPuOfnBRUOpSyl3OIowwrEStcoZnUcAf9qZvE'\n  }\n};\n\n\n// https://api.themoviedb.org/3/trending/all/{time_window}?api_key\n\nexport async function fetchTrending(pageNumber) {\n  const { data } = await axios.get(\n    `trending/movie/day?api_key=${KEY_API}&page=${pageNumber}&language=en-US`, options\n  )\n  return data;\n}\n\n// https://api.themoviedb.org/3/search/movie&api_key\n// search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false\nexport async function fetchSearchMovies(query, pageNumber) {\n  const { data } = await axios.get(\n    `search/movie?query=${query}&include_adult=false&language=en-US&page=1&api_key=${KEY_API}&page=${pageNumber}`, options\n  )\n  return data;\n};\n\n// https://api.themoviedb.org/3/movie/626735&api_key\n// movie/${movieId}?api_key=${API_KEY}&language=en-US\n\nexport async function fetchMovieDetails(movieId) {\n  const { data } = await axios.get(\n    `movie/${movieId}?api_key=${KEY_API}&language=en-US`, options\n  )\n  return data;\n};\n\n// https://api.themoviedb.org/3/movie/890971/credits&api_key\n// movie/${movieId}/credits?api_key=${API_KEY}&language=en-US\n\nexport async function fetchCastMovie(movieId) {\n  const { data } = await axios.get(\n    `movie/${movieId}/credits?api_key=${KEY_API}&language=en-US`, options\n  )\n  return data;\n};\n\n// https://api.themoviedb.org/3/movie/890971/reviews&api_key\n// movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US\n\nexport async function fetchReviewsMovie(movieId) {\n  const { data } = await axios.get(\n    `movie/${movieId}/reviews?api_key=${KEY_API}&language=en-US`, options\n  )\n  return data;\n};\n\n// 'https://api.themoviedb.org/3/movie/626735/videos?language=en-US'\n\nexport async function fetchMovieVideo(movieId) {\n  const { data } = await axios.get(\n    `movie/${movieId}/videos?api_key=${KEY_API}&language=en-US`, options\n  )\n  return data;\n};\n","export const BASE_POSTER_URL = 'https://image.tmdb.org/t/p/w500/';\nexport const PLACEHOLDER = 'https://via.placeholder.com/182x273';\n\n\nexport const breakpoints = {\n  xs: \"320px\",\n  msm: \"639px\",\n  sm: \"640px\",\n  mmd: \"767px\",\n  md: \"768px\",\n  lg: \"1024px\",\n  mlg: \"1100px\",\n  xl: \"1280px\",\n}\n\nexport const devices = {\n  xs: `(min-width: ${breakpoints.xs})`,\n  sm: `(min-width: ${breakpoints.sm})`,\n  md: `(min-width: ${breakpoints.md})`,\n  msm: `(max-width: ${breakpoints.msm})`,\n  mmd: `(max-width: ${breakpoints.mmd})`,\n  mlg: `(max-width: ${breakpoints.mlg})`,\n}\n","\nexport const STATUS = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  REJECTED: 'rejected',\n  RESOLVED: 'resolved',\n}\n"],"names":["Container","styled","div","_templateObject","_taggedTemplateLiteral","_ref","message","_jsx","children","ContainerGallery","ul","breakpoints","xl","devices","md","mlg","lg","sm","mmd","xs","msm","ContainerMovie","li","_templateObject2","ImageMovieWeb","img","_templateObject3","movies","location","useLocation","_Fragment","map","movie","_jsxs","Link","to","concat","id","state","from","src","poster_path","BASE_POSTER_URL","PLACEHOLDER","original_title","alt","title","name","StyledReactPaginate","ReactPaginate","props","activeClassName","handlePageClick","pageCount","activePage","breakLabel","nextLabel","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","breakClassName","breakLinkClassName","nextClassName","nextLinkClassName","onPageChange","pageRangeDisplayed","marginPagesDisplayed","previousLabel","renderOnZeroPageCount","forcePage","FormSearch","form","Input","input","ButtonSearch","button","setSearchParams","_useState","useState","_useState2","_slicedToArray","query","setQuery","onSubmit","e","preventDefault","value","onChange","target","toLowerCase","trim","type","autoComplete","autoFocus","placeholder","disabled","BsSearch","_searchParams$get","_searchParams$get2","setMovies","_useState3","STATUS","IDLE","_useState4","status","setStatus","_useState5","_useState6","error","setError","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","_useState7","_useState8","setPageCount","currentQuery","get","pageNumber","parseInt","useEffect","_getSearchMovies","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$fetchSearchMov","results","total_pages","wrap","_context","prev","next","PENDING","fetchSearchMovies","sent","length","REJECTED","abrupt","RESOLVED","t0","stop","apply","arguments","_x","_x2","getSearchMovies","SearchForm","Loader","MoviesList","ErrorCard","Paginate","currentPage","selected","page","axios","defaults","baseURL","KEY_API","process","REACT_APP_SECRET_KEY_TMDB","options","method","headers","accept","Authorization","fetchTrending","_fetchTrending","_yield$axios$get","data","_x3","_fetchSearchMovies","_callee2","_yield$axios$get2","_context2","fetchMovieDetails","_x4","_fetchMovieDetails","_callee3","movieId","_yield$axios$get3","_context3","fetchCastMovie","_x5","_fetchCastMovie","_callee4","_yield$axios$get4","_context4","fetchReviewsMovie","_x6","_fetchReviewsMovie","_callee5","_yield$axios$get5","_context5","fetchMovieVideo","_x7","_fetchMovieVideo","_callee6","_yield$axios$get6","_context6"],"sourceRoot":""}